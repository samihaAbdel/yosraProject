{"ast":null,"code":"import { DELETE_COMMENT, DELETE_POST, EDIT_COMMENT, GET_POSTS, LIKE_POST, UNLIKE_POST, UPDATE_POST } from \"../actions/post.actions\";\nconst initialState = {};\nexport default function postReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_POSTS:\n      return action.payload;\n    case LIKE_POST:\n      return state.map(post => {\n        if (post._id === action.payload.postId) {\n          return {\n            ...post,\n            likers: [action.payload.userId, ...post.likers]\n          };\n        }\n        return post;\n      });\n    case UNLIKE_POST:\n      return state.map(post => {\n        if (post._id === action.payload.postId) {\n          return {\n            ...post,\n            likers: post.likers.filter(id => id !== action.payload.userId)\n          };\n        }\n        return post;\n      });\n    case UPDATE_POST:\n      return state.map(post => {\n        if (post._id === action.payload.postId) {\n          return {\n            ...post,\n            message: action.payload.message\n          };\n        } else return post;\n      });\n    case DELETE_POST:\n      return state.filter(post => post._id !== action.payload.postId);\n    case EDIT_COMMENT:\n      return state.map(post => {\n        if (post._id === action.payload.postId) {\n          return {\n            ...post,\n            comments: post.comments.map(comment => {\n              if (comment._id === action.payload.commentId) {\n                return {\n                  ...comment,\n                  text: action.payload.text\n                };\n              } else {\n                return comment;\n              }\n            })\n          };\n        } else return post;\n      });\n    case DELETE_COMMENT:\n      return state.map(post => {\n        if (post._id === action.payload.postId) {\n          return {\n            ...post,\n            comments: post.comments.filter(comment => comment._id !== action.payload.commentId)\n          };\n        } else return post;\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["DELETE_COMMENT","DELETE_POST","EDIT_COMMENT","GET_POSTS","LIKE_POST","UNLIKE_POST","UPDATE_POST","initialState","postReducer","state","action","type","payload","map","post","_id","postId","likers","userId","filter","id","message","comments","comment","commentId","text"],"sources":["C:/Users/benam/OneDrive/Bureau/My-Mern-Project/client/src/reducers/post.reducer.js"],"sourcesContent":["import {\n  DELETE_COMMENT,\n  DELETE_POST,\n  EDIT_COMMENT,\n  GET_POSTS,\n  LIKE_POST,\n  UNLIKE_POST,\n  UPDATE_POST,\n} from \"../actions/post.actions\";\n\nconst initialState = {};\n\nexport default function postReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_POSTS:\n      return action.payload;\n    case LIKE_POST:\n      return state.map((post) => {\n        if (post._id === action.payload.postId) {\n          return {\n            ...post,\n            likers: [action.payload.userId, ...post.likers],\n          };\n        }\n        return post;\n      });\n    case UNLIKE_POST:\n      return state.map((post) => {\n        if (post._id === action.payload.postId) {\n          return {\n            ...post,\n            likers: post.likers.filter((id) => id !== action.payload.userId),\n          };\n        }\n        return post;\n      });\n    case UPDATE_POST:\n      return state.map((post) => {\n        if (post._id === action.payload.postId) {\n          return {\n            ...post,\n            message: action.payload.message,\n          };\n        } else return post;\n      });\n    case DELETE_POST:\n      return state.filter((post) => post._id !== action.payload.postId);\n    case EDIT_COMMENT:\n      return state.map((post) => {\n        if (post._id === action.payload.postId) {\n          return {\n            ...post,\n            comments: post.comments.map((comment) => {\n              if (comment._id === action.payload.commentId) {\n                return {\n                  ...comment,\n                  text: action.payload.text,\n                };\n              } else {\n                return comment;\n              }\n            }),\n          };\n        } else return post;\n      });\n    case DELETE_COMMENT:\n      return state.map((post) => {\n        if (post._id === action.payload.postId) {\n          return {\n            ...post,\n            comments: post.comments.filter(\n              (comment) => comment._id !== action.payload.commentId\n            ),\n          };\n        } else return post;\n      });\n    default:\n      return state;\n  }\n}\n"],"mappings":"AAAA,SACEA,cAAc,EACdC,WAAW,EACXC,YAAY,EACZC,SAAS,EACTC,SAAS,EACTC,WAAW,EACXC,WAAW,QACN,yBAAyB;AAEhC,MAAMC,YAAY,GAAG,CAAC,CAAC;AAEvB,eAAe,SAASC,WAAWA,CAACC,KAAK,GAAGF,YAAY,EAAEG,MAAM,EAAE;EAChE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKR,SAAS;MACZ,OAAOO,MAAM,CAACE,OAAO;IACvB,KAAKR,SAAS;MACZ,OAAOK,KAAK,CAACI,GAAG,CAAEC,IAAI,IAAK;QACzB,IAAIA,IAAI,CAACC,GAAG,KAAKL,MAAM,CAACE,OAAO,CAACI,MAAM,EAAE;UACtC,OAAO;YACL,GAAGF,IAAI;YACPG,MAAM,EAAE,CAACP,MAAM,CAACE,OAAO,CAACM,MAAM,EAAE,GAAGJ,IAAI,CAACG,MAAM;UAChD,CAAC;QACH;QACA,OAAOH,IAAI;MACb,CAAC,CAAC;IACJ,KAAKT,WAAW;MACd,OAAOI,KAAK,CAACI,GAAG,CAAEC,IAAI,IAAK;QACzB,IAAIA,IAAI,CAACC,GAAG,KAAKL,MAAM,CAACE,OAAO,CAACI,MAAM,EAAE;UACtC,OAAO;YACL,GAAGF,IAAI;YACPG,MAAM,EAAEH,IAAI,CAACG,MAAM,CAACE,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAKV,MAAM,CAACE,OAAO,CAACM,MAAM;UACjE,CAAC;QACH;QACA,OAAOJ,IAAI;MACb,CAAC,CAAC;IACJ,KAAKR,WAAW;MACd,OAAOG,KAAK,CAACI,GAAG,CAAEC,IAAI,IAAK;QACzB,IAAIA,IAAI,CAACC,GAAG,KAAKL,MAAM,CAACE,OAAO,CAACI,MAAM,EAAE;UACtC,OAAO;YACL,GAAGF,IAAI;YACPO,OAAO,EAAEX,MAAM,CAACE,OAAO,CAACS;UAC1B,CAAC;QACH,CAAC,MAAM,OAAOP,IAAI;MACpB,CAAC,CAAC;IACJ,KAAKb,WAAW;MACd,OAAOQ,KAAK,CAACU,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKL,MAAM,CAACE,OAAO,CAACI,MAAM,CAAC;IACnE,KAAKd,YAAY;MACf,OAAOO,KAAK,CAACI,GAAG,CAAEC,IAAI,IAAK;QACzB,IAAIA,IAAI,CAACC,GAAG,KAAKL,MAAM,CAACE,OAAO,CAACI,MAAM,EAAE;UACtC,OAAO;YACL,GAAGF,IAAI;YACPQ,QAAQ,EAAER,IAAI,CAACQ,QAAQ,CAACT,GAAG,CAAEU,OAAO,IAAK;cACvC,IAAIA,OAAO,CAACR,GAAG,KAAKL,MAAM,CAACE,OAAO,CAACY,SAAS,EAAE;gBAC5C,OAAO;kBACL,GAAGD,OAAO;kBACVE,IAAI,EAAEf,MAAM,CAACE,OAAO,CAACa;gBACvB,CAAC;cACH,CAAC,MAAM;gBACL,OAAOF,OAAO;cAChB;YACF,CAAC;UACH,CAAC;QACH,CAAC,MAAM,OAAOT,IAAI;MACpB,CAAC,CAAC;IACJ,KAAKd,cAAc;MACjB,OAAOS,KAAK,CAACI,GAAG,CAAEC,IAAI,IAAK;QACzB,IAAIA,IAAI,CAACC,GAAG,KAAKL,MAAM,CAACE,OAAO,CAACI,MAAM,EAAE;UACtC,OAAO;YACL,GAAGF,IAAI;YACPQ,QAAQ,EAAER,IAAI,CAACQ,QAAQ,CAACH,MAAM,CAC3BI,OAAO,IAAKA,OAAO,CAACR,GAAG,KAAKL,MAAM,CAACE,OAAO,CAACY,SAC9C;UACF,CAAC;QACH,CAAC,MAAM,OAAOV,IAAI;MACpB,CAAC,CAAC;IACJ;MACE,OAAOL,KAAK;EAChB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}