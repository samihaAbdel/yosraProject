{"ast":null,"code":"import { createErrorClass } from './createErrorClass';\nexport var ObjectUnsubscribedError = createErrorClass(function (_super) {\n  return function ObjectUnsubscribedErrorImpl() {\n    _super(this);\n    this.name = 'ObjectUnsubscribedError';\n    this.message = 'object unsubscribed';\n  };\n});","map":{"version":3,"names":["createErrorClass","ObjectUnsubscribedError","_super","ObjectUnsubscribedErrorImpl","name","message"],"sources":["C:\\Users\\samka\\OneDrive\\Bureau\\My-Mern-Backend\\client\\node_modules\\rxjs\\src\\internal\\util\\ObjectUnsubscribedError.ts"],"sourcesContent":["import { createErrorClass } from './createErrorClass';\r\n\r\nexport interface ObjectUnsubscribedError extends Error {}\r\n\r\nexport interface ObjectUnsubscribedErrorCtor {\r\n  /**\r\n   * @deprecated Internal implementation detail. Do not construct error instances.\r\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\r\n   */\r\n  new (): ObjectUnsubscribedError;\r\n}\r\n\r\n/**\r\n * An error thrown when an action is invalid because the object has been\r\n * unsubscribed.\r\n *\r\n * @see {@link Subject}\r\n * @see {@link BehaviorSubject}\r\n *\r\n * @class ObjectUnsubscribedError\r\n */\r\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\r\n  (_super) =>\r\n    function ObjectUnsubscribedErrorImpl(this: any) {\r\n      _super(this);\r\n      this.name = 'ObjectUnsubscribedError';\r\n      this.message = 'object unsubscribed';\r\n    }\r\n);\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AAqBrD,OAAO,IAAMC,uBAAuB,GAAgCD,gBAAgB,CAClF,UAACE,MAAM;EACL,gBAASC,2BAA2BA,CAAA;IAClCD,MAAM,CAAC,IAAI,CAAC;IACZ,IAAI,CAACE,IAAI,GAAG,yBAAyB;IACrC,IAAI,CAACC,OAAO,GAAG,qBAAqB;EACtC,CAAC;AAJD,CAIC,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}