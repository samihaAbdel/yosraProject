{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benam\\\\OneDrive\\\\Bureau\\\\My-Mern-Project\\\\client\\\\src\\\\components\\\\Log\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SignUpForm from './SignUpForm';\nimport SignInForm from './SignInForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Log = () => {\n  _s();\n  const [signUpModal, setSignUpModal] = useState(true);\n  const [signInModal, setSignInModal] = useState(false);\n  const handleModals = e => {\n    if (e.target.id === \"register\") {\n      setSignInModal(false);\n      setSignUpModal(true);\n    } else if (e.taget.id === \"login\") {\n      setSignUpModal(false);\n      setSignInModal(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connection-form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: handleModals,\n          id: \"register\",\n          className: signUpModal ? \"active-btn\" : null,\n          children: \"S'inscrire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: handleModals,\n          id: \"login\",\n          className: signInModal ? \"active-btn\" : null,\n          children: \"Se connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), signUpModal && /*#__PURE__*/_jsxDEV(SignUpForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }, this), signInModal && /*#__PURE__*/_jsxDEV(SignInForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(Log, \"m07NSIxNyfNEWtUsZsp+F7dE/TA=\");\n_c = Log;\nexport default Log;\nvar _c;\n$RefreshReg$(_c, \"Log\");","map":{"version":3,"names":["React","useState","SignUpForm","SignInForm","jsxDEV","_jsxDEV","Log","_s","signUpModal","setSignUpModal","signInModal","setSignInModal","handleModals","e","target","id","taget","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/benam/OneDrive/Bureau/My-Mern-Project/client/src/components/Log/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport SignUpForm from './SignUpForm';\r\nimport SignInForm from './SignInForm';\r\n\r\nconst Log = () => {\r\nconst [signUpModal, setSignUpModal] = useState(true);\r\nconst [signInModal, setSignInModal] = useState(false);\r\n\r\nconst handleModals = (e) => {\r\n    if (e.target.id === \"register\") {\r\n        setSignInModal(false);\r\n        setSignUpModal(true);\r\n    } else if (e.taget.id === \"login\") {\r\n        setSignUpModal(false);\r\n        setSignInModal(true);\r\n    }\r\n}\r\n    return (\r\n        <div className=\"connection-form\">\r\n            < div className=\"form-container\">\r\n            <ul>\r\n                <li \r\n                onClick={handleModals} \r\n                id=\"register\" \r\n                className={signUpModal ? \"active-btn\" : null}\r\n                >S'inscrire</li>\r\n                <li onClick={handleModals} id=\"login\" className={signInModal ? \"active-btn\" : null}\r\n                >Se connecter</li>\r\n            </ul>\r\n            {signUpModal && <SignUpForm />}\r\n            {signInModal && <SignInForm />}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Log;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMW,YAAY,GAAIC,CAAC,IAAK;IACxB,IAAIA,CAAC,CAACC,MAAM,CAACC,EAAE,KAAK,UAAU,EAAE;MAC5BJ,cAAc,CAAC,KAAK,CAAC;MACrBF,cAAc,CAAC,IAAI,CAAC;IACxB,CAAC,MAAM,IAAII,CAAC,CAACG,KAAK,CAACD,EAAE,KAAK,OAAO,EAAE;MAC/BN,cAAc,CAAC,KAAK,CAAC;MACrBE,cAAc,CAAC,IAAI,CAAC;IACxB;EACJ,CAAC;EACG,oBACIN,OAAA;IAAKY,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC5Bb,OAAA;MAAMY,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAChCb,OAAA;QAAAa,QAAA,gBACIb,OAAA;UACAc,OAAO,EAAEP,YAAa;UACtBG,EAAE,EAAC,UAAU;UACbE,SAAS,EAAET,WAAW,GAAG,YAAY,GAAG,IAAK;UAAAU,QAAA,EAC5C;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChBlB,OAAA;UAAIc,OAAO,EAAEP,YAAa;UAACG,EAAE,EAAC,OAAO;UAACE,SAAS,EAAEP,WAAW,GAAG,YAAY,GAAG,IAAK;UAAAQ,QAAA,EAClF;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,EACJf,WAAW,iBAAIH,OAAA,CAACH,UAAU;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC7Bb,WAAW,iBAAIL,OAAA,CAACF,UAAU;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEzB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAChB,EAAA,CA/BID,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}