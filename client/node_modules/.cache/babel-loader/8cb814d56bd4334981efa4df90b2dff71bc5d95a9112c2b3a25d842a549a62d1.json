{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samka\\\\OneDrive\\\\Bureau\\\\yosraProject\\\\client\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./styles/index.scss\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { getPosts } from \"./actions/post.actions\";\nimport { BrowserRouter } from \"react-router-dom\";\n// import { createEpicMiddleware } from 'redux-observable';\nimport rootReducer from \"./reducers\";\nimport { getUsers } from \"./actions/users.actions\";\n// dev tools\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { thunk } from 'redux-thunk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ni;\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\nstore.dispatch(getUsers());\nstore.dispatch(getPosts());\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n/*#__PURE__*/\n// <React.StrictMode>\n_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 5\n}, this)\n// </React.StrictMode>\n);","map":{"version":3,"names":["React","ReactDOM","App","Provider","applyMiddleware","createStore","getPosts","BrowserRouter","rootReducer","getUsers","composeWithDevTools","thunk","jsxDEV","_jsxDEV","i","store","dispatch","root","createRoot","document","getElementById","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/samka/OneDrive/Bureau/yosraProject/client/src/index.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\nimport \"./styles/index.scss\";\r\nimport { Provider } from \"react-redux\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport { getPosts } from \"./actions/post.actions\";\r\nimport {BrowserRouter} from  \"react-router-dom\";\r\n// import { createEpicMiddleware } from 'redux-observable';\r\nimport rootReducer from \"./reducers\";\r\nimport { getUsers } from \"./actions/users.actions\";\r\n// dev tools\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {thunk} from 'redux-thunk';\r\ni\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk)) \r\n);\r\n\r\n\r\nstore.dispatch(getUsers());\r\nstore.dispatch(getPosts());\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  // <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  // </React.StrictMode>\r\n);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,qBAAqB;AAC5B,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,eAAe,EAAEC,WAAW,QAAQ,OAAO;AACpD,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAAQC,aAAa,QAAQ,kBAAkB;AAC/C;AACA,OAAOC,WAAW,MAAM,YAAY;AACpC,SAASC,QAAQ,QAAQ,yBAAyB;AAClD;AACA,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAAQC,KAAK,QAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClCC,CAAC;AAGD,MAAMC,KAAK,GAAGV,WAAW,CACvBG,WAAW,EACXE,mBAAmB,CAACN,eAAe,CAACO,KAAK,CAAC,CAC5C,CAAC;AAGDI,KAAK,CAACC,QAAQ,CAACP,QAAQ,CAAC,CAAC,CAAC;AAC1BM,KAAK,CAACC,QAAQ,CAACV,QAAQ,CAAC,CAAC,CAAC;AAG1B,MAAMW,IAAI,GAAGhB,QAAQ,CAACiB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM;AAAA;AACT;AACER,OAAA,CAACN,aAAa;EAAAe,QAAA,eACZT,OAAA,CAACV,QAAQ;IAACY,KAAK,EAAEA,KAAM;IAAAO,QAAA,eACrBT,OAAA,CAACX,GAAG;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACE;AACjB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}