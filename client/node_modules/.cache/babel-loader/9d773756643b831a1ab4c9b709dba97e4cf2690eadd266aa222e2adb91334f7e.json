{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samka\\\\OneDrive\\\\Bureau\\\\My-Mern-Backend\\\\client\\\\src\\\\components\\\\Thread.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts } from \"../actions/post.actions\";\nimport Card from \"./Post/Card\";\nimport { isEmpty } from \"./Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Thread = () => {\n  _s();\n  const [loadPost, setLoadPost] = useState(true);\n  const [count, setCount] = useState(5);\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.postReducer);\n  const loadMore = () => {\n    if (window.innerHeight + document.documentElement.scrollTop + 1 > document.scrollingElement.scrollHeight) {\n      setLoadPost(true);\n    }\n  };\n  useEffect(() => {\n    if (loadPost) {\n      dispatch(getPosts(count));\n      setLoadPost(false);\n      setCount(count + 5);\n    }\n    window.addEventListener('scroll', loadMore);\n    return () => window.removeEventListener('scroll', loadMore);\n  }, [loadPost, dispatch, count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thread-container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: !isEmpty(posts[0]) && posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          post: post\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Thread, \"uYliv8aL0+9P38A1nOp51AD2TrY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Thread;\nexport default Thread;\nvar _c;\n$RefreshReg$(_c, \"Thread\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","getPosts","Card","isEmpty","jsxDEV","_jsxDEV","Thread","_s","loadPost","setLoadPost","count","setCount","dispatch","posts","state","postReducer","loadMore","window","innerHeight","document","documentElement","scrollTop","scrollingElement","scrollHeight","addEventListener","removeEventListener","className","children","map","post","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/samka/OneDrive/Bureau/My-Mern-Backend/client/src/components/Thread.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPosts } from \"../actions/post.actions\";\r\nimport Card from \"./Post/Card\";\r\nimport { isEmpty } from \"./Utils\";\r\n\r\nconst Thread = () => {\r\n  const [loadPost, setLoadPost] = useState(true);\r\n  const [count, setCount] = useState(5);\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.postReducer);\r\n\r\n  const loadMore = () => {\r\n    if (window.innerHeight + document.documentElement.scrollTop + 1 > document.scrollingElement.scrollHeight) {\r\n      setLoadPost(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loadPost) {\r\n      dispatch(getPosts(count));\r\n      setLoadPost(false);\r\n      setCount(count + 5);\r\n    }\r\n\r\n    window.addEventListener('scroll', loadMore);\r\n    return () => window.removeEventListener('scroll', loadMore);\r\n  }, [loadPost, dispatch, count]);\r\n\r\n  return (\r\n    <div className=\"thread-container\">\r\n      <ul>\r\n        {!isEmpty(posts[0]) &&\r\n          posts.map((post) => {\r\n            return <Card post={post} key={post._id} />;\r\n          })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Thread;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,OAAO,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,KAAK,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,WAAW,CAAC;EAEvD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIC,MAAM,CAACC,WAAW,GAAGC,QAAQ,CAACC,eAAe,CAACC,SAAS,GAAG,CAAC,GAAGF,QAAQ,CAACG,gBAAgB,CAACC,YAAY,EAAE;MACxGd,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,EAAE;MACZI,QAAQ,CAACX,QAAQ,CAACS,KAAK,CAAC,CAAC;MACzBD,WAAW,CAAC,KAAK,CAAC;MAClBE,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;IAEAO,MAAM,CAACO,gBAAgB,CAAC,QAAQ,EAAER,QAAQ,CAAC;IAC3C,OAAO,MAAMC,MAAM,CAACQ,mBAAmB,CAAC,QAAQ,EAAET,QAAQ,CAAC;EAC7D,CAAC,EAAE,CAACR,QAAQ,EAAEI,QAAQ,EAAEF,KAAK,CAAC,CAAC;EAE/B,oBACEL,OAAA;IAAKqB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/BtB,OAAA;MAAAsB,QAAA,EACG,CAACxB,OAAO,CAACU,KAAK,CAAC,CAAC,CAAC,CAAC,IACjBA,KAAK,CAACe,GAAG,CAAEC,IAAI,IAAK;QAClB,oBAAOxB,OAAA,CAACH,IAAI;UAAC2B,IAAI,EAAEA;QAAK,GAAMA,IAAI,CAACC,GAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAC5C,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAjCID,MAAM;EAAA,QAGOP,WAAW,EACdC,WAAW;AAAA;AAAAmC,EAAA,GAJrB7B,MAAM;AAmCZ,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}