{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samka\\\\OneDrive\\\\Bureau\\\\My-Mern-Backend\\\\client\\\\src\\\\components\\\\Trends.js\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTrends } from \"../actions/post.actions\";\nimport { isEmpty } from \"./Utils\";\nimport { NavLink } from \"react-router-dom\";\nconst Trends = () => {\n  const posts = useSelector(state => state.allPostsReducer);\n  const usersData = useSelector(state => state.usersReducer);\n  const trendList = useSelector(state => state.trendingReducer);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!isEmpty(posts[0])) {\n      const postsArr = Object.keys(posts).map(i => posts[i]);\n      let sortedArray = postsArr.sort((a, b) => {\n        return b.likers.length - a.likers.length;\n      });\n      sortedArray.length = 3;\n      dispatch(getTrends(sortedArray));\n    }\n  }, [posts, dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trending-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Trending\"), /*#__PURE__*/React.createElement(NavLink, {\n    exact: true,\n    to: \"/trending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, trendList.length && trendList.map(post => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: post._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }\n    }, post.picture && /*#__PURE__*/React.createElement(\"img\", {\n      src: post.picture,\n      alt: \"post-pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 38\n      }\n    }), post.video && /*#__PURE__*/React.createElement(\"iframe\", {\n      src: post.video,\n      frameBorder: \"0\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true,\n      title: post._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 23\n      }\n    }), isEmpty(post.picture) && isEmpty(post.video) && /*#__PURE__*/React.createElement(\"img\", {\n      src: usersData[0] && usersData.map(user => {\n        if (user._id === post.posterId) {\n          return user.picture;\n        } else return null;\n      }).join(\"\"),\n      alt: \"profil-pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"trend-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, post.message), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, \"Lire\")));\n  }))));\n};\nexport default Trends;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","getTrends","isEmpty","NavLink","Trends","posts","state","allPostsReducer","usersData","usersReducer","trendList","trendingReducer","dispatch","postsArr","Object","keys","map","i","sortedArray","sort","a","b","likers","length","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","exact","to","post","key","_id","picture","src","alt","video","frameBorder","allow","allowFullScreen","title","user","posterId","join","message"],"sources":["C:/Users/samka/OneDrive/Bureau/My-Mern-Backend/client/src/components/Trends.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getTrends } from \"../actions/post.actions\";\r\nimport { isEmpty } from \"./Utils\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Trends = () => {\r\n  const posts = useSelector((state) => state.allPostsReducer);\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n  const trendList = useSelector((state) => state.trendingReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!isEmpty(posts[0])) {\r\n      const postsArr = Object.keys(posts).map((i) => posts[i]);\r\n      let sortedArray = postsArr.sort((a, b) => {\r\n        return b.likers.length - a.likers.length;\r\n      });\r\n      sortedArray.length = 3;\r\n      dispatch(getTrends(sortedArray));\r\n    }\r\n  }, [posts, dispatch]);\r\n\r\n  return (\r\n    <div className=\"trending-container\">\r\n      <h4>Trending</h4>\r\n      <NavLink exact to=\"/trending\">\r\n        <ul>\r\n          {trendList.length &&\r\n            trendList.map((post) => {\r\n              return (\r\n                <li key={post._id}>\r\n                  <div>\r\n                    {post.picture && <img src={post.picture} alt=\"post-pic\" />}\r\n                    {post.video && (\r\n                      <iframe\r\n                        src={post.video}\r\n                        frameBorder=\"0\"\r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                        allowFullScreen\r\n                        title={post._id}\r\n                      ></iframe>\r\n                    )}\r\n                    {isEmpty(post.picture) && isEmpty(post.video) && (\r\n                      <img src={usersData[0] && usersData.map((user) => {\r\n                        if (user._id === post.posterId) {\r\n                          return user.picture;\r\n                        } else return null;\r\n                      })\r\n                      .join(\"\")\r\n                    } alt=\"profil-pic\"/>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"trend-content\">\r\n                    <p>{post.message}</p>\r\n                    <span>Lire</span>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trends;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}