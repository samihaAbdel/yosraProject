{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benam\\\\OneDrive\\\\Bureau\\\\My-Mern-Project\\\\client\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles/index.scss\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { getPosts } from \"./actions/post.actions\";\nimport { Router } from \"react-router-dom\";\n//import { createEpicMiddleware } from 'redux-observable';\nimport rootReducer from \"./reducers\";\nimport { getUsers } from \"./actions/users.actions\";\n// dev tools\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { thunk } from 'redux-thunk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = createStore(rootReducer, composeWithDevTools(rootReducer, applyMiddleware(thunk)));\nstore.dispatch(getUsers());\nstore.dispatch(getPosts());\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"names":["React","ReactDOM","App","Provider","applyMiddleware","createStore","getPosts","Router","rootReducer","getUsers","composeWithDevTools","thunk","jsxDEV","_jsxDEV","store","dispatch","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById"],"sources":["C:/Users/benam/OneDrive/Bureau/My-Mern-Project/client/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles/index.scss\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { getPosts } from \"./actions/post.actions\";\nimport {Router} from  \"react-router-dom\";\n//import { createEpicMiddleware } from 'redux-observable';\nimport rootReducer from \"./reducers\";\nimport { getUsers } from \"./actions/users.actions\";\n// dev tools\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {thunk} from 'redux-thunk';\n\n\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(rootReducer, applyMiddleware(thunk)) \n);\n\n\nstore.dispatch(getUsers());\nstore.dispatch(getPosts());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,qBAAqB;AAC5B,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,eAAe,EAAEC,WAAW,QAAQ,OAAO;AACpD,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAAQC,MAAM,QAAQ,kBAAkB;AACxC;AACA,OAAOC,WAAW,MAAM,YAAY;AACpC,SAASC,QAAQ,QAAQ,yBAAyB;AAClD;AACA,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAAQC,KAAK,QAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIlC,MAAMC,KAAK,GAAGT,WAAW,CACvBG,WAAW,EACXE,mBAAmB,CAACF,WAAW,EAAEJ,eAAe,CAACO,KAAK,CAAC,CACzD,CAAC;AAGDG,KAAK,CAACC,QAAQ,CAACN,QAAQ,CAAC,CAAC,CAAC;AAC1BK,KAAK,CAACC,QAAQ,CAACT,QAAQ,CAAC,CAAC,CAAC;AAE1BL,QAAQ,CAACe,MAAM,eACbH,OAAA,CAACb,KAAK,CAACiB,UAAU;EAAAC,QAAA,eACfL,OAAA,CAACN,MAAM;IAAAW,QAAA,eACLL,OAAA,CAACV,QAAQ;MAACW,KAAK,EAAEA,KAAM;MAAAI,QAAA,eACrBL,OAAA,CAACX,GAAG;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACO,CAAC,EACnBC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}