{"ast":null,"code":"import axios from \"axios\";\n\n// posts\nexport const GET_POSTS = \"GET_POSTS\";\nexport const GET_ALL_POSTS = \"GET_ALL_POSTS\";\nexport const ADD_POST = \"ADD_POST\";\nexport const LIKE_POST = \"LIKE_POST\";\nexport const UNLIKE_POST = \"UNLIKE_POST\";\nexport const UPDATE_POST = \"UPDATE_POST\";\nexport const DELETE_POST = \"DELETE_POST\";\n\n// comments\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const EDIT_COMMENT = \"EDIT_COMMENT\";\nexport const DELETE_COMMENT = \"DELETE_COMMENT\";\n\n// trends\nexport const GET_TRENDS = \"GET_TRENDS\";\n\n// errors\nexport const GET_POST_ERRORS = \"GET_POST_ERRORS\";\nexport const getPosts = num => {\n  return dispatch => {\n    return axios.get(`api/post/`).then(res => {\n      const array = res.data.slice(0, num);\n      dispatch({\n        type: GET_POSTS,\n        payload: array\n      });\n      dispatch({\n        type: GET_ALL_POSTS,\n        payload: res.data\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const addPost = data => {\n  return dispatch => {\n    return axios.post(`api/post/`, data).then(res => {\n      if (res.data.errors) {\n        dispatch({\n          type: GET_POST_ERRORS,\n          payload: res.data.errors\n        });\n      } else {\n        dispatch({\n          type: GET_POST_ERRORS,\n          payload: \"\"\n        });\n      }\n    });\n  };\n};\nexport const likePost = (postId, userId) => {\n  return dispatch => {\n    return axios({\n      method: \"patch\",\n      url: `api/post/like-post/` + postId,\n      data: {\n        id: userId\n      }\n    }).then(res => {\n      dispatch({\n        type: LIKE_POST,\n        payload: {\n          postId,\n          userId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const unlikePost = (postId, userId) => {\n  return dispatch => {\n    return axios({\n      method: \"patch\",\n      url: `api/post/unlike-post/` + postId,\n      data: {\n        id: userId\n      }\n    }).then(res => {\n      dispatch({\n        type: UNLIKE_POST,\n        payload: {\n          postId,\n          userId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const updatePost = (postId, message) => {\n  return dispatch => {\n    return axios({\n      method: \"put\",\n      url: `api/post/${postId}`,\n      data: {\n        message\n      }\n    }).then(res => {\n      dispatch({\n        type: UPDATE_POST,\n        payload: {\n          message,\n          postId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const deletePost = postId => {\n  return dispatch => {\n    return axios({\n      method: \"delete\",\n      url: `api/post/${postId}`\n    }).then(res => {\n      dispatch({\n        type: DELETE_POST,\n        payload: {\n          postId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const addComment = (postId, commenterId, text, commenterPseudo) => {\n  return dispatch => {\n    return axios({\n      method: \"patch\",\n      url: `api/post/comment-post/${postId}`,\n      data: {\n        commenterId,\n        text,\n        commenterPseudo\n      }\n    }).then(res => {\n      dispatch({\n        type: ADD_COMMENT,\n        payload: {\n          postId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const editComment = (postId, commentId, text) => {\n  return dispatch => {\n    return axios({\n      method: \"patch\",\n      url: `api/post/edit-comment-post/${postId}`,\n      data: {\n        commentId,\n        text\n      }\n    }).then(res => {\n      dispatch({\n        type: EDIT_COMMENT,\n        payload: {\n          postId,\n          commentId,\n          text\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const deleteComment = (postId, commentId) => {\n  return dispatch => {\n    return axios({\n      method: \"patch\",\n      url: `api/post/delete-comment-post/${postId}`,\n      data: {\n        commentId\n      }\n    }).then(res => {\n      dispatch({\n        type: DELETE_COMMENT,\n        payload: {\n          postId,\n          commentId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const getTrends = sortedArray => {\n  return dispatch => {\n    dispatch({\n      type: GET_TRENDS,\n      payload: sortedArray\n    });\n  };\n};","map":{"version":3,"names":["axios","GET_POSTS","GET_ALL_POSTS","ADD_POST","LIKE_POST","UNLIKE_POST","UPDATE_POST","DELETE_POST","ADD_COMMENT","EDIT_COMMENT","DELETE_COMMENT","GET_TRENDS","GET_POST_ERRORS","getPosts","num","dispatch","get","then","res","array","data","slice","type","payload","catch","err","console","log","addPost","post","errors","likePost","postId","userId","method","url","id","unlikePost","updatePost","message","deletePost","addComment","commenterId","text","commenterPseudo","editComment","commentId","deleteComment","getTrends","sortedArray"],"sources":["C:/Users/samka/OneDrive/Bureau/yosraProject/client/src/actions/post.actions.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// posts\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const GET_ALL_POSTS = \"GET_ALL_POSTS\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const LIKE_POST = \"LIKE_POST\";\r\nexport const UNLIKE_POST = \"UNLIKE_POST\";\r\nexport const UPDATE_POST = \"UPDATE_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\n\r\n// comments\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const EDIT_COMMENT = \"EDIT_COMMENT\";\r\nexport const DELETE_COMMENT = \"DELETE_COMMENT\";\r\n\r\n// trends\r\nexport const GET_TRENDS = \"GET_TRENDS\";\r\n\r\n// errors\r\nexport const GET_POST_ERRORS = \"GET_POST_ERRORS\";\r\n\r\nexport const getPosts = (num) => {\r\n  return (dispatch) => {\r\n    return axios\r\n      .get(`api/post/`)\r\n      .then((res) => {\r\n        const array = res.data.slice(0, num);\r\n        dispatch({ type: GET_POSTS, payload: array });\r\n        dispatch({ type: GET_ALL_POSTS, payload: res.data });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const addPost = (data) => {\r\n  return (dispatch) => {\r\n    return axios\r\n      .post(`api/post/`, data)\r\n      .then((res) => {\r\n        if (res.data.errors) {\r\n          dispatch({ type: GET_POST_ERRORS, payload: res.data.errors });\r\n        } else {\r\n          dispatch({ type: GET_POST_ERRORS, payload: \"\" });\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const likePost = (postId, userId) => {\r\n  return (dispatch) => {\r\n    return axios({\r\n      method: \"patch\",\r\n      url: `api/post/like-post/` + postId,\r\n      data: { id: userId },\r\n    })\r\n      .then((res) => {\r\n        dispatch({ type: LIKE_POST, payload: { postId, userId } });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const unlikePost = (postId, userId) => {\r\n  return (dispatch) => {\r\n    return axios({\r\n      method: \"patch\",\r\n      url: `api/post/unlike-post/` + postId,\r\n      data: { id: userId },\r\n    })\r\n      .then((res) => {\r\n        dispatch({ type: UNLIKE_POST, payload: { postId, userId } });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const updatePost = (postId, message) => {\r\n  return (dispatch) => {\r\n    return axios({\r\n      method: \"put\",\r\n      url: `api/post/${postId}`,\r\n      data: { message },\r\n    })\r\n      .then((res) => {\r\n        dispatch({ type: UPDATE_POST, payload: { message, postId } });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const deletePost = (postId) => {\r\n  return (dispatch) => {\r\n    return axios({\r\n      method: \"delete\",\r\n      url: `api/post/${postId}`,\r\n    })\r\n      .then((res) => {\r\n        dispatch({ type: DELETE_POST, payload: { postId } });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const addComment = (postId, commenterId, text, commenterPseudo) => {\r\n  return (dispatch) => {\r\n    return axios({\r\n      method: \"patch\",\r\n      url: `api/post/comment-post/${postId}`,\r\n      data: { commenterId, text, commenterPseudo },\r\n    })\r\n      .then((res) => {\r\n        dispatch({ type: ADD_COMMENT, payload: { postId } });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const editComment = (postId, commentId, text) => {\r\n  return (dispatch) => {\r\n    return axios({\r\n      method: \"patch\",\r\n      url: `api/post/edit-comment-post/${postId}`,\r\n      data: { commentId, text },\r\n    })\r\n      .then((res) => {\r\n        dispatch({ type: EDIT_COMMENT, payload: { postId, commentId, text } });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const deleteComment = (postId, commentId) => {\r\n  return (dispatch) => {\r\n    return axios({\r\n      method: \"patch\",\r\n      url: `api/post/delete-comment-post/${postId}`,\r\n      data: { commentId },\r\n    })\r\n      .then((res) => {\r\n        dispatch({ type: DELETE_COMMENT, payload: { postId, commentId } });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const getTrends = (sortedArray) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: GET_TRENDS, payload: sortedArray });\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}