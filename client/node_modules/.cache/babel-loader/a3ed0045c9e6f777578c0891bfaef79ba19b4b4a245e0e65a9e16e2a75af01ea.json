{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benam\\\\OneDrive\\\\Bureau\\\\My-Mern-Project\\\\client\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles/index.scss\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport { getUsers } from \"./actions/users.actions\";\nimport { getPosts } from \"./actions/post.actions\";\n// For asynchronous actions (if needed):\nimport { createEpicMiddleware } from 'redux-observable';\n\n// DevTools extension support\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst epicMiddleware = createEpicMiddleware(); // Initialize epic middleware (if using epics)\n\n// Choose the appropriate middleware based on your needs:\nconst middleware = [thunk]; // Use thunk for basic async handling\n// If using epics, add epicMiddleware as well:\n// const middleware = [thunk, epicMiddleware];\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middleware)) // Apply middleware with DevTools\n);\nstore.dispatch(getUsers());\nstore.dispatch(getPosts());\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"names":["React","ReactDOM","App","Provider","createStore","applyMiddleware","rootReducer","getUsers","getPosts","createEpicMiddleware","composeWithDevTools","jsxDEV","_jsxDEV","epicMiddleware","middleware","thunk","store","dispatch","render","StrictMode","children","BrowserRouter","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById"],"sources":["C:/Users/benam/OneDrive/Bureau/My-Mern-Project/client/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles/index.scss\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport { getUsers } from \"./actions/users.actions\";\nimport { getPosts } from \"./actions/post.actions\";\n// For asynchronous actions (if needed):\nimport { createEpicMiddleware } from 'redux-observable';\n\n// DevTools extension support\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst epicMiddleware = createEpicMiddleware(); // Initialize epic middleware (if using epics)\n\n// Choose the appropriate middleware based on your needs:\nconst middleware = [thunk]; // Use thunk for basic async handling\n// If using epics, add epicMiddleware as well:\n// const middleware = [thunk, epicMiddleware];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware)) // Apply middleware with DevTools\n);\n\nstore.dispatch(getUsers());\nstore.dispatch(getPosts());\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,qBAAqB;AAC5B,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD,OAAOC,WAAW,MAAM,YAAY;AACpC,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,QAAQ,QAAQ,wBAAwB;AACjD;AACA,SAASC,oBAAoB,QAAQ,kBAAkB;;AAEvD;AACA,SAASC,mBAAmB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,cAAc,GAAGJ,oBAAoB,CAAC,CAAC,CAAC,CAAC;;AAE/C;AACA,MAAMK,UAAU,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC;AAC5B;AACA;;AAEA,MAAMC,KAAK,GAAGZ,WAAW,CACvBE,WAAW,EACXI,mBAAmB,CAACL,eAAe,CAAC,GAAGS,UAAU,CAAC,CAAC,CAAC;AACtD,CAAC;AAEDE,KAAK,CAACC,QAAQ,CAACV,QAAQ,CAAC,CAAC,CAAC;AAC1BS,KAAK,CAACC,QAAQ,CAACT,QAAQ,CAAC,CAAC,CAAC;AAE1BP,QAAQ,CAACiB,MAAM,eACbN,OAAA,CAACZ,KAAK,CAACmB,UAAU;EAAAC,QAAA,eACfR,OAAA,CAACS,aAAa;IAAAD,QAAA,eACZR,OAAA,CAACT,QAAQ;MAACa,KAAK,EAAEA,KAAM;MAAAI,QAAA,eACrBR,OAAA,CAACV,GAAG;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACA,CAAC,EACnBC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}