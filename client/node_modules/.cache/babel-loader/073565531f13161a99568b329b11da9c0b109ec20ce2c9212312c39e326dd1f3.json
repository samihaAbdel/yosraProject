{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Subscription } from '../Subscription';\nvar Action = function (_super) {\n  __extends(Action, _super);\n  function Action(scheduler, work) {\n    return _super.call(this) || this;\n  }\n  Action.prototype.schedule = function (state, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n    return this;\n  };\n  return Action;\n}(Subscription);\nexport { Action };","map":{"version":3,"names":["Subscription","Action","_super","__extends","scheduler","work","call","prototype","schedule","state","delay"],"sources":["C:\\Users\\samka\\OneDrive\\Bureau\\My-Mern-Backend\\client\\node_modules\\rxjs\\src\\internal\\scheduler\\Action.ts"],"sourcesContent":["import { Scheduler } from '../Scheduler';\r\nimport { Subscription } from '../Subscription';\r\nimport { SchedulerAction } from '../types';\r\n\r\n/**\r\n * A unit of work to be executed in a `scheduler`. An action is typically\r\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\r\n * themselves about creating and manipulating an Action.\r\n *\r\n * ```ts\r\n * class Action<T> extends Subscription {\r\n *   new (scheduler: Scheduler, work: (state?: T) => void);\r\n *   schedule(state?: T, delay: number = 0): Subscription;\r\n * }\r\n * ```\r\n *\r\n * @class Action<T>\r\n */\r\nexport class Action<T> extends Subscription {\r\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\r\n    super();\r\n  }\r\n  /**\r\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\r\n   * some context object, `state`. May happen at some point in the future,\r\n   * according to the `delay` parameter, if specified.\r\n   * @param {T} [state] Some contextual data that the `work` function uses when\r\n   * called by the Scheduler.\r\n   * @param {number} [delay] Time to wait before executing the work, where the\r\n   * time unit is implicit and defined by the Scheduler.\r\n   * @return {void}\r\n   */\r\n  public schedule(state?: T, delay: number = 0): Subscription {\r\n    return this;\r\n  }\r\n}\r\n"],"mappings":";AACA,SAASA,YAAY,QAAQ,iBAAiB;AAiB9C,IAAAC,MAAA,aAAAC,MAAA;EAA+BC,SAAA,CAAAF,MAAA,EAAAC,MAAA;EAC7B,SAAAD,OAAYG,SAAoB,EAAEC,IAAmD;WACnFH,MAAA,CAAAI,IAAA,MAAO;EACT;EAWOL,MAAA,CAAAM,SAAA,CAAAC,QAAQ,GAAf,UAAgBC,KAAS,EAAEC,KAAiB;IAAjB,IAAAA,KAAA;MAAAA,KAAA,IAAiB;IAAA;IAC1C,OAAO,IAAI;EACb,CAAC;EACH,OAAAT,MAAC;AAAD,CAAC,CAjB8BD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}